/*
 * Copyright Terracotta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: this directory had to be named clustered-dist instead of just dist
 * because gradle creatively substitutes :dist for :clustered:dist or vice versa
 * if groups are the same
 * https://discuss.gradle.org/t/dependency-substitution-wrong-with-more-than-one-sub-project-with-same-name/7253/6
 */

group = 'org.ehcache'
archivesBaseName = 'ehcache-clustered'

apply plugin: 'distribution'
apply plugin: EhDistribute

configurations {
  kit
  serverLibs
}

dependencies {
  compile project(':clustered:client')
  compile project(':clustered:common')
  compile "org.terracotta.internal:client-runtime:$terracottaCoreVersion" changing true

  serverLibs(project(':clustered:server')) {
    exclude group: 'org.terracotta', module: 'entity-server-api'
    exclude group: 'org.terracotta', module: 'entity-common-api'
    exclude group: 'org.terracotta', module: 'packaging-support'
    exclude group: 'org.terracotta.internal', module: 'tc-config-parser'
  }
  serverLibs "org.terracotta.entities:clustered-map-server:$parent.clusteredMapVersion" changing true

  kit "org.terracotta.internal:terracotta-kit:$terracottaCoreVersion@zip" changing true

  shadow "org.slf4j:slf4j-api:$parent.slf4jVersion"
  pomOnlyCompile "org.ehcache:ehcache:$parent.baseVersion"
}

distributions {
  main {
    baseName = archivesBaseName
    contents {
      //tc kit
      into ('') {
        from configurations.kit.files.collect { zipTree(it) }
        eachFile { f ->
          // remove top level directory from the kit
          f.path = f.path.replace("terracotta-$terracottaCoreVersion/", "")
        }
        exclude { f ->
          // Exclude tc's client subdir
          f.path.contains('client/')
        }
        includeEmptyDirs = false
      }
      into ("server/plugins/lib") {
        from configurations.serverLibs
      }
      into ('client/ehcache') {
        from jar
        from project(':dist').jar.archivePath.getPath()
        exclude { f ->
          !f.path.contains('ehcache') // do not add any transitives in this directory
        }
      }
      into ('client/lib') {
        from configurations.shadow
      }
    }
  }
}

distTar {
  classifier = 'kit'
  compression = Compression.GZIP
}

distZip {
  classifier = 'kit'
}
